/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { AMM, AMMInterface } from "../../contracts/AMM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516122bd3803806122bd833981810160405281019061003291906101ac565b6040518060400160405280600881526020017f4c5020546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4c5054000000000000000000000000000000000000000000000000000000000081525081600390816100ad919061043c565b5080600490816100bd919061043c565b50505081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061050e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101798261014e565b9050919050565b6101898161016e565b811461019457600080fd5b50565b6000815190506101a681610180565b92915050565b600080604083850312156101c3576101c2610149565b5b60006101d185828601610197565b92505060206101e285828601610197565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061026d57607f821691505b6020821081036102805761027f610226565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102ab565b6102f286836102ab565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061033961033461032f8461030a565b610314565b61030a565b9050919050565b6000819050919050565b6103538361031e565b61036761035f82610340565b8484546102b8565b825550505050565b600090565b61037c61036f565b61038781848461034a565b505050565b5b818110156103ab576103a0600082610374565b60018101905061038d565b5050565b601f8211156103f0576103c181610286565b6103ca8461029b565b810160208510156103d9578190505b6103ed6103e58561029b565b83018261038c565b50505b505050565b600082821c905092915050565b6000610413600019846008026103f5565b1980831691505092915050565b600061042c8383610402565b9150826002028217905092915050565b610445826101ec565b67ffffffffffffffff81111561045e5761045d6101f7565b5b6104688254610255565b6104738282856103af565b600060209050601f8311600181146104a65760008415610494578287015190505b61049e8582610420565b865550610506565b601f1984166104b486610286565b60005b828110156104dc578489015182556001820191506020850194506020810190506104b7565b868310156104f957848901516104f5601f891682610402565b8355505b6001600288020188555050505b505050505050565b611da08061051d6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a08231116100975780639f1d0f59116100665780639f1d0f591461029f578063a9059cbb146102bb578063dc5fa6c5146102eb578063dd62ed3e1461030957610100565b806370a082311461021957806395d89b41146102495780639c8f9f23146102675780639cd441da1461028357610100565b806319e36f3b116100d357806319e36f3b1461018f57806323b872dd146101ad578063313ce567146101dd5780635f64b55b146101fb57610100565b806306fdde0314610105578063095ea7b3146101235780630fc63d101461015357806318160ddd14610171575b600080fd5b61010d610339565b60405161011a9190611651565b60405180910390f35b61013d6004803603810190610138919061170c565b6103cb565b60405161014a9190611767565b60405180910390f35b61015b6103ee565b6040516101689190611791565b60405180910390f35b610179610414565b60405161018691906117bb565b60405180910390f35b61019761041e565b6040516101a491906117bb565b60405180910390f35b6101c760048036038101906101c291906117d6565b610424565b6040516101d49190611767565b60405180910390f35b6101e5610453565b6040516101f29190611845565b60405180910390f35b61020361045c565b6040516102109190611791565b60405180910390f35b610233600480360381019061022e9190611860565b610482565b60405161024091906117bb565b60405180910390f35b6102516104ca565b60405161025e9190611651565b60405180910390f35b610281600480360381019061027c919061188d565b61055c565b005b61029d600480360381019061029891906118ba565b610779565b005b6102b960048036038101906102b491906118fa565b6109c8565b005b6102d560048036038101906102d0919061170c565b610ddb565b6040516102e29190611767565b60405180910390f35b6102f3610dfe565b60405161030091906117bb565b60405180910390f35b610323600480360381019061031e919061194d565b610e04565b60405161033091906117bb565b60405180910390f35b606060038054610348906119bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610374906119bc565b80156103c15780601f10610396576101008083540402835291602001916103c1565b820191906000526020600020905b8154815290600101906020018083116103a457829003601f168201915b5050505050905090565b6000806103d6610e8b565b90506103e3818585610e93565b600191505092915050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b60085481565b60008061042f610e8b565b905061043c858285610ea5565b610447858585610f3a565b60019150509392505050565b60006012905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104d9906119bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610505906119bc565b80156105525780601f1061052757610100808354040283529160200191610552565b820191906000526020600020905b81548152906001019060200180831161053557829003601f168201915b5050505050905090565b6000610566610414565b600754836105749190611a1c565b61057e9190611a8d565b9050600061058a610414565b600854846105989190611a1c565b6105a29190611a8d565b90506105ae338461102e565b81600760008282546105c09190611abe565b9250508190555080600860008282546105d99190611abe565b92505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161063d929190611af2565b6020604051808303816000875af115801561065c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106809190611b47565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106de929190611af2565b6020604051808303816000875af11580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107219190611b47565b503373ffffffffffffffffffffffffffffffffffffffff167f59c3a0b60c6ab7deb62e1440c9e72441db6db7dfe514dba8cb18e60c0d896efa83838660405161076c93929190611b74565b60405180910390a2505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016107d893929190611bab565b6020604051808303816000875af11580156107f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081b9190611b47565b50600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161087b93929190611bab565b6020604051808303816000875af115801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190611b47565b506000806108ca610414565b036108ea576108e382846108de9190611a1c565b6110b0565b9050610935565b6109326007546108f8610414565b856109039190611a1c565b61090d9190611a8d565b600854610918610414565b856109239190611a1c565b61092d9190611a8d565b61112a565b90505b61093f3382611143565b82600760008282546109519190611be2565b92505081905550816008600082825461096a9190611be2565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fbeb3885786d637a474cbc287c0a44587231633a077f0bd30354d5a4b18996fce8484846040516109bb93929190611b74565b60405180910390a2505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480610a715750600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611c62565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16149050600081610b3457600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b58565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050600082610b6957600854610b6d565b6007545b9050600083610b7e57600754610b82565b6008545b90508673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b8152600401610bc193929190611bab565b6020604051808303816000875af1158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c049190611b47565b5060006103e86103e588610c189190611a1c565b610c229190611a8d565b905060008184610c329190611be2565b8383610c3e9190611a1c565b610c489190611a8d565b905086811015610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8490611cce565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610cc8929190611af2565b6020604051808303816000875af1158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b9190611b47565b508515610d49578760076000828254610d249190611be2565b925050819055508060086000828254610d3d9190611abe565b92505081905550610d7c565b8760086000828254610d5b9190611be2565b925050819055508060076000828254610d749190611abe565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628a878b85604051610dc89493929190611cee565b60405180910390a2505050505050505050565b600080610de6610e8b565b9050610df3818585610f3a565b600191505092915050565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610ea083838360016111c5565b505050565b6000610eb18484610e04565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610f345781811015610f24578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610f1b93929190611d33565b60405180910390fd5b610f33848484840360006111c5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fac5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610fa39190611791565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361101e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110159190611791565b60405180910390fd5b61102983838361139c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110a05760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110979190611791565b60405180910390fd5b6110ac8260008361139c565b5050565b6000600382111561111757819050600060016002846110cf9190611a8d565b6110d99190611be2565b90505b818110156111115780915060028182856110f69190611a8d565b6111009190611be2565b61110a9190611a8d565b90506110dc565b50611125565b6000821461112457600190505b5b919050565b6000818310611139578161113b565b825b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111b55760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111ac9190611791565b60405180910390fd5b6111c16000838361139c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112375760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161122e9190611791565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112a95760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112a09190611791565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611396578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161138d91906117bb565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113ee5780600260008282546113e29190611be2565b925050819055506114c1565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561147a578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161147193929190611d33565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361150a5780600260008282540392505081905550611557565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516115b491906117bb565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115fb5780820151818401526020810190506115e0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611623826115c1565b61162d81856115cc565b935061163d8185602086016115dd565b61164681611607565b840191505092915050565b6000602082019050818103600083015261166b8184611618565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116a382611678565b9050919050565b6116b381611698565b81146116be57600080fd5b50565b6000813590506116d0816116aa565b92915050565b6000819050919050565b6116e9816116d6565b81146116f457600080fd5b50565b600081359050611706816116e0565b92915050565b6000806040838503121561172357611722611673565b5b6000611731858286016116c1565b9250506020611742858286016116f7565b9150509250929050565b60008115159050919050565b6117618161174c565b82525050565b600060208201905061177c6000830184611758565b92915050565b61178b81611698565b82525050565b60006020820190506117a66000830184611782565b92915050565b6117b5816116d6565b82525050565b60006020820190506117d060008301846117ac565b92915050565b6000806000606084860312156117ef576117ee611673565b5b60006117fd868287016116c1565b935050602061180e868287016116c1565b925050604061181f868287016116f7565b9150509250925092565b600060ff82169050919050565b61183f81611829565b82525050565b600060208201905061185a6000830184611836565b92915050565b60006020828403121561187657611875611673565b5b6000611884848285016116c1565b91505092915050565b6000602082840312156118a3576118a2611673565b5b60006118b1848285016116f7565b91505092915050565b600080604083850312156118d1576118d0611673565b5b60006118df858286016116f7565b92505060206118f0858286016116f7565b9150509250929050565b60008060006060848603121561191357611912611673565b5b6000611921868287016116c1565b9350506020611932868287016116f7565b9250506040611943868287016116f7565b9150509250925092565b6000806040838503121561196457611963611673565b5b6000611972858286016116c1565b9250506020611983858286016116c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119d457607f821691505b6020821081036119e7576119e661198d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a27826116d6565b9150611a32836116d6565b9250828202611a40816116d6565b91508282048414831517611a5757611a566119ed565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a98826116d6565b9150611aa3836116d6565b925082611ab357611ab2611a5e565b5b828204905092915050565b6000611ac9826116d6565b9150611ad4836116d6565b9250828203905081811115611aec57611aeb6119ed565b5b92915050565b6000604082019050611b076000830185611782565b611b1460208301846117ac565b9392505050565b611b248161174c565b8114611b2f57600080fd5b50565b600081519050611b4181611b1b565b92915050565b600060208284031215611b5d57611b5c611673565b5b6000611b6b84828501611b32565b91505092915050565b6000606082019050611b8960008301866117ac565b611b9660208301856117ac565b611ba360408301846117ac565b949350505050565b6000606082019050611bc06000830186611782565b611bcd6020830185611782565b611bda60408301846117ac565b949350505050565b6000611bed826116d6565b9150611bf8836116d6565b9250828201905080821115611c1057611c0f6119ed565b5b92915050565b7f496e76616c696420746f6b656e00000000000000000000000000000000000000600082015250565b6000611c4c600d836115cc565b9150611c5782611c16565b602082019050919050565b60006020820190508181036000830152611c7b81611c3f565b9050919050565b7f536c69707061676520746f6f2068696768000000000000000000000000000000600082015250565b6000611cb86011836115cc565b9150611cc382611c82565b602082019050919050565b60006020820190508181036000830152611ce781611cab565b9050919050565b6000608082019050611d036000830187611782565b611d106020830186611782565b611d1d60408301856117ac565b611d2a60608301846117ac565b95945050505050565b6000606082019050611d486000830186611782565b611d5560208301856117ac565b611d6260408301846117ac565b94935050505056fea26469706673582212201f7bd68443dbe977ba94146cd8418d90abab14db9fd4fcae264ebc40975fe1d164736f6c634300081c0033";

type AMMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AMMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AMM__factory extends ContractFactory {
  constructor(...args: AMMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenA, _tokenB, overrides || {});
  }
  override deploy(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenA, _tokenB, overrides || {}) as Promise<
      AMM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AMM__factory {
    return super.connect(runner) as AMM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AMMInterface {
    return new Interface(_abi) as AMMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AMM {
    return new Contract(address, _abi, runner) as unknown as AMM;
  }
}
